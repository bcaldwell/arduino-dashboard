{"version":3,"sources":["../../../src/arduino/modules/analogRead.js"],"names":[],"mappings":";;AAAA,IAAI,SAAS,GAAG,YAAY,CAAC;AAC7B,MAAM,CAAC,OAAO,GAAG;AACf,MAAI,EAAE,aAAa;AACnB,WAAS,EAAE,SAAS;AACpB,MAAI,EAAE,cAAS,OAAO,EAAE,EAAE,EAAE,GAAG,EAAE;AAC/B,WAAO,IAAI,UAAU,CAAC,OAAO,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;GACzC;CACF,CAAC;;AAEF,IAAI,UAAU,GAAG,SAAb,UAAU,CAAY,OAAO,EAAE,EAAE,EAAE,GAAG,EAAE;AAC1C,MAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,MAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACf,MAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAChB,MAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,MAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACzC,MAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,MAAI,CAAC,YAAY,GAAG,CAAC,CAAC;;AAEtB,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAS,KAAK,EAAE,KAAK,EAAE;AACvC,QAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5C,QAAI,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACtB,QAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,GAAG,GAAG,EAAE;;AAE7F,QAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,EAAE;AACrC,WAAG,EAAE,IAAI,CAAC,GAAG;AACb,cAAM,EAAE,IAAI,CAAC,MAAM;OACpB,CAAC,CAAC;AACH,UAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC1B;GACF,CAAC,CAAC;;AAEH,MAAI,CAAC,SAAS,GAAG,YAAW;AAC1B,WAAO,IAAI,CAAC,MAAM,CAAC;GACpB,CAAC;AACF,MAAI,CAAC,SAAS,GAAG,UAAS,MAAM,EAAC;AAC/B,QAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;AAC9B,QAAI,CAAC,MAAM,GAAG,MAAM,CAAC;GACtB,CAAC;AACF,MAAI,CAAC,eAAe,GAAG,UAAS,GAAG,EAAC;AAClC,WAAO,GAAG,CAAC;GACZ,CAAC;CACH,CAAC","file":"analogRead.js","sourcesContent":["var routeName = \"analogRead\";\nmodule.exports = {\n  name: \"Analog Read\",\n  routeName: routeName,\n  init: function(arduino, io, pin) {\n    return new analogRead(arduino, io, pin);\n  },\n};\n\nvar analogRead = function(arduino, io, pin) {\n  var that = this;\n\n  this.pin = pin;\n  this.status = 0;\n  this.lastStatus = null;\n  this.readPin = new arduino.Pin(this.pin);\n  this.analogPin = true;\n  this.lastSendTime = 0;\n\n  this.readPin.read(function(error, value) {\n    that.setStatus(that.analogToDigital(value));\n    var time = Date.now();\n    if (that.status !== that.lastStatus && that.status !== null && time - that.lastSendTime > 100) {\n      // console.log (that.status);\n      io.sockets.emit(routeName + ':change', {\n        pin: that.pin,\n        status: that.status\n      });\n      that.lastSendTime = time;\n    }\n  });\n\n  this.getStatus = function() {\n    return this.status;\n  };\n  this.setStatus = function(status){\n    this.lastStatus = this.status;\n    this.status = status;\n  };\n  this.analogToDigital = function(val){\n    return val;\n  };\n};\n"]}