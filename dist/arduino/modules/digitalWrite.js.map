{"version":3,"sources":["../../../src/arduino/modules/digitalWrite.js"],"names":[],"mappings":";;AAAA,IAAI,SAAS,GAAG,cAAc,CAAC;AAC/B,MAAM,CAAC,OAAO,GAAG;AACf,MAAI,EAAE,eAAe;AACrB,WAAS,EAAE,SAAS;AACpB,MAAI,EAAE,cAAS,OAAO,EAAE,EAAE,EAAE,GAAG,EAAE;AAC/B,WAAO,IAAI,YAAY,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;GACvC;AACD,OAAK,EAAE,eAAS,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE;AAClC,QAAI,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;AACzB,QAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;AACnB,MAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,EAAE;AACrC,SAAG,EAAE,GAAG;AACR,YAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE;KAC9B,CAAC,CAAC;GACJ;CAEF,CAAC;;;AAGF,IAAI,YAAY,GAAG,SAAf,YAAY,CAAY,OAAO,EAAE,GAAG,EAAE;AACxC,MAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACf,MAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAChB,MAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;AAE1C,MAAI,CAAC,EAAE,GAAG,YAAW;AACnB,QAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACvB,QAAI,CAAC,MAAM,GAAG,CAAC,CAAC;GACjB,CAAC;AACF,MAAI,CAAC,GAAG,GAAG,YAAW;AACpB,QAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACvB,QAAI,CAAC,MAAM,GAAG,CAAC,CAAC;GACjB,CAAC;AACF,MAAI,CAAC,MAAM,GAAG,YAAW;AACvB,QAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAI,CAAC,CAAC,AAAC,GAAG,CAAC,CAAC;AACrC,QAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;GAClC,CAAC;AACF,MAAI,CAAC,SAAS,GAAG,YAAW;AAC1B,WAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1C,WAAO,IAAI,CAAC,MAAM,CAAC;GACpB,CAAC;CACH,CAAC","file":"digitalWrite.js","sourcesContent":["var routeName = \"digitalWrite\";\nmodule.exports = {\n  name: \"Digital Write\",\n  routeName: routeName,\n  init: function(arduino, io, pin) {\n    return new digitalWrite(arduino, pin);\n  },\n  route: function(data, fn, io, pins) {\n    var pin = parseInt(data);\n    pins[pin].toggle();\n    io.sockets.emit(routeName + ':change', {\n      pin: pin,\n      status: pins[pin].getStatus()\n    });\n  },\n  // update: function(){}\n};\n\n\nvar digitalWrite = function(arduino, pin) {\n  this.pin = pin;\n  this.status = 0;\n  this.writePin = new arduino.Pin(this.pin);\n\n  this.on = function() {\n    this.writePin.write(1);\n    this.status = 1;\n  };\n  this.off = function() {\n    this.writePin.write(0);\n    this.status = 0;\n  };\n  this.toggle = function() {\n    this.status = this.status * (-1) + 1;\n    this.writePin.write(this.status);\n  };\n  this.getStatus = function() {\n    console.log(this.pin + \" \" + this.status);\n    return this.status;\n  };\n};\n"]}